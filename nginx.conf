user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;

daemon off;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;

        location / {
            root /www;
        }

        # rtmp statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet info.xsl;
        }

        location /stat.xml {
            rtmp_stat all;
        }

        # recordings
        location /rec {
            alias /srv/rec;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            tcp_nopush on;
        }
    }
}

rtmp_auto_push on;

rtmp {

    server {
        listen 1935;
        notify_method get;

        chunk_size 131072;
        max_message 12M;
        buflen 2s;

        # Pull and record
        exec_static /usr/bin/ffmpeg -i rtmp://some.host/foo/name -c copy -f flv rtmp://localhost/stream/name;

        # Restream to another server
        exec_static /usr/bin/ffmpeg -i rtmp://localhost/stream/name -c copy -f flv rtmp://other.host/some/name;

        application stream {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            recorder all {
                record all;
                record_path /srv/zoo;
                record_suffix _%Y-%m-%d_%H-%M-%S.flv;
                record_interval 30m;
                exec_record_done bash -c "mkdir -p $dirname/$name && /usr/bin/ffmpeg -i $path -c copy $dirname/$name/$basename.mp4 && rm $path";
            }
        }
    }
}
